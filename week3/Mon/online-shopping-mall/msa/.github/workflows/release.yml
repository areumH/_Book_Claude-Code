name: Release

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Run tests
        run: pnpm test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract tag version
        id: tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and push Web Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/web/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/shopping-mall-web:${{ steps.tag.outputs.VERSION }}
            ${{ secrets.DOCKER_USERNAME }}/shopping-mall-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push API Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/api/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/shopping-mall-api:${{ steps.tag.outputs.VERSION }}
            ${{ secrets.DOCKER_USERNAME }}/shopping-mall-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.VERSION }}
          release_name: Release ${{ steps.tag.outputs.VERSION }}
          body: |
            ## Changes in this Release
            - Docker images published:
              - `${{ secrets.DOCKER_USERNAME }}/shopping-mall-web:${{ steps.tag.outputs.VERSION }}`
              - `${{ secrets.DOCKER_USERNAME }}/shopping-mall-api:${{ steps.tag.outputs.VERSION }}`
            
            ## Deployment
            ```bash
            docker pull ${{ secrets.DOCKER_USERNAME }}/shopping-mall-web:${{ steps.tag.outputs.VERSION }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/shopping-mall-api:${{ steps.tag.outputs.VERSION }}
            ```
          draft: false
          prerelease: ${{ contains(steps.tag.outputs.VERSION, '-') }}