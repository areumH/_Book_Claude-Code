version: '3.8'

services:
  # Databases
  postgres:
    image: postgres:15
    container_name: shopping-mall-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shopping_mall
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d

  mongodb:
    image: mongo:7
    container_name: shopping-mall-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:7-alpine
    container_name: shopping-mall-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  # Message Queue
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: shopping-mall-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: docker/gateway/Dockerfile
    container_name: shopping-mall-gateway
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
    depends_on:
      - user-service
      - product-service
      - order-service
      - payment-service

  # Microservices
  user-service:
    build:
      context: .
      dockerfile: services/user/Dockerfile
    container_name: user-service
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/user_service
    depends_on:
      - postgres

  product-service:
    build:
      context: .
      dockerfile: services/product/Dockerfile
    container_name: product-service
    ports:
      - '3002:3002'
    environment:
      - NODE_ENV=development
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/product_service?authSource=admin
    depends_on:
      - mongodb

  order-service:
    build:
      context: .
      dockerfile: services/order/Dockerfile
    container_name: order-service
    ports:
      - '3003:3003'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/order_service
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
    depends_on:
      - postgres
      - rabbitmq

  payment-service:
    build:
      context: .
      dockerfile: services/payment/Dockerfile
    container_name: payment-service
    ports:
      - '3004:3004'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/payment_service
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - STRIPE_SECRET_KEY=sk_test_your_stripe_key
    depends_on:
      - postgres
      - rabbitmq

  shipping-service:
    build:
      context: .
      dockerfile: services/shipping/Dockerfile
    container_name: shipping-service
    ports:
      - '3005:3005'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/shipping_service
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
    depends_on:
      - postgres
      - rabbitmq

  cart-service:
    build:
      context: .
      dockerfile: services/cart/Dockerfile
    container_name: cart-service
    ports:
      - '3006:3006'
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis

  review-service:
    build:
      context: .
      dockerfile: services/review/Dockerfile
    container_name: review-service
    ports:
      - '3007:3007'
    environment:
      - NODE_ENV=development
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/review_service?authSource=admin
    depends_on:
      - mongodb

  notification-service:
    build:
      context: .
      dockerfile: services/notification/Dockerfile
    container_name: notification-service
    ports:
      - '3008:3008'
    environment:
      - NODE_ENV=development
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - SENDGRID_API_KEY=your_sendgrid_key
      - TWILIO_ACCOUNT_SID=your_twilio_sid
      - TWILIO_AUTH_TOKEN=your_twilio_token
    depends_on:
      - rabbitmq

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  rabbitmq_data:

networks:
  default:
    name: shopping-mall-network